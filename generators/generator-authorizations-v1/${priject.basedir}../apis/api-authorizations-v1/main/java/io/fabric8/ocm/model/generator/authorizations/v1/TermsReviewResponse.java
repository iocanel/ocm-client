/*
 * authorizations
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.generator.authorizations.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Representation of Red Hat&#x27;s Terms and Conditions for using OpenShift Dedicated and Amazon Red Hat OpenShift [Terms] review response. 
 */
@Schema(description = "Representation of Red Hat's Terms and Conditions for using OpenShift Dedicated and Amazon Red Hat OpenShift [Terms] review response. ")

public class TermsReviewResponse {
  @JsonProperty("account_id")
  private String accountId = null;

  @JsonProperty("organization_id")
  private String organizationId = null;

  @JsonProperty("redirect_url")
  private String redirectUrl = null;

  @JsonProperty("terms_available")
  private Boolean termsAvailable = null;

  @JsonProperty("terms_required")
  private Boolean termsRequired = null;

  public TermsReviewResponse accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Account ID of requesting user. 
   * @return accountId
  **/
  @Schema(description = "Account ID of requesting user. ")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public TermsReviewResponse organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Indicates which Organization the user belongs to. 
   * @return organizationId
  **/
  @Schema(description = "Indicates which Organization the user belongs to. ")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public TermsReviewResponse redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Optional URL to Red Hat&#x27;s Terms and Conditions Application if the user has either required or available Terms needs to acknowledge. 
   * @return redirectUrl
  **/
  @Schema(description = "Optional URL to Red Hat's Terms and Conditions Application if the user has either required or available Terms needs to acknowledge. ")
  public String getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

  public TermsReviewResponse termsAvailable(Boolean termsAvailable) {
    this.termsAvailable = termsAvailable;
    return this;
  }

   /**
   * Defines whether Terms are available. 
   * @return termsAvailable
  **/
  @Schema(description = "Defines whether Terms are available. ")
  public Boolean isTermsAvailable() {
    return termsAvailable;
  }

  public void setTermsAvailable(Boolean termsAvailable) {
    this.termsAvailable = termsAvailable;
  }

  public TermsReviewResponse termsRequired(Boolean termsRequired) {
    this.termsRequired = termsRequired;
    return this;
  }

   /**
   * Defines whether user is required to accept Terms before using OpenShift Dedicated and Amazon Red Hat OpenShift. 
   * @return termsRequired
  **/
  @Schema(description = "Defines whether user is required to accept Terms before using OpenShift Dedicated and Amazon Red Hat OpenShift. ")
  public Boolean isTermsRequired() {
    return termsRequired;
  }

  public void setTermsRequired(Boolean termsRequired) {
    this.termsRequired = termsRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TermsReviewResponse termsReviewResponse = (TermsReviewResponse) o;
    return Objects.equals(this.accountId, termsReviewResponse.accountId) &&
        Objects.equals(this.organizationId, termsReviewResponse.organizationId) &&
        Objects.equals(this.redirectUrl, termsReviewResponse.redirectUrl) &&
        Objects.equals(this.termsAvailable, termsReviewResponse.termsAvailable) &&
        Objects.equals(this.termsRequired, termsReviewResponse.termsRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, organizationId, redirectUrl, termsAvailable, termsRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TermsReviewResponse {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    termsAvailable: ").append(toIndentedString(termsAvailable)).append("\n");
    sb.append("    termsRequired: ").append(toIndentedString(termsRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
