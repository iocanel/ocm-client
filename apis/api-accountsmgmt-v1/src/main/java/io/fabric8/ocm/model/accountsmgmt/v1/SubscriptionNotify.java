/*
 * accounts_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.accountsmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.accountsmgmt.v1.TemplateParameter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * This struct is a request to send a templated email to a user related to this subscription. 
 */
@Schema(description = "This struct is a request to send a templated email to a user related to this subscription. ")

public class SubscriptionNotify {
  @JsonProperty("bcc_address")
  private String bccAddress = null;

  @JsonProperty("cluster_id")
  private String clusterId = null;

  @JsonProperty("cluster_uuid")
  private String clusterUuid = null;

  @JsonProperty("include_red_hat_associates")
  private Boolean includeRedHatAssociates = null;

  @JsonProperty("subject")
  private String subject = null;

  @JsonProperty("subscription_id")
  private String subscriptionId = null;

  @JsonProperty("template_name")
  private String templateName = null;

  @JsonProperty("template_parameters")
  private List<TemplateParameter> templateParameters = null;

  public SubscriptionNotify bccAddress(String bccAddress) {
    this.bccAddress = bccAddress;
    return this;
  }

   /**
   * The BCC address to be included on the email that is sent 
   * @return bccAddress
  **/
  @Schema(description = "The BCC address to be included on the email that is sent ")
  public String getBccAddress() {
    return bccAddress;
  }

  public void setBccAddress(String bccAddress) {
    this.bccAddress = bccAddress;
  }

  public SubscriptionNotify clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Indicates which Cluster (internal id) the resource type belongs to 
   * @return clusterId
  **/
  @Schema(description = "Indicates which Cluster (internal id) the resource type belongs to ")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public SubscriptionNotify clusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
    return this;
  }

   /**
   * Indicates which Cluster (external id) the resource type belongs to 
   * @return clusterUuid
  **/
  @Schema(description = "Indicates which Cluster (external id) the resource type belongs to ")
  public String getClusterUuid() {
    return clusterUuid;
  }

  public void setClusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
  }

  public SubscriptionNotify includeRedHatAssociates(Boolean includeRedHatAssociates) {
    this.includeRedHatAssociates = includeRedHatAssociates;
    return this;
  }

   /**
   * Indicates whether to include red hat associates in the email notification 
   * @return includeRedHatAssociates
  **/
  @Schema(description = "Indicates whether to include red hat associates in the email notification ")
  public Boolean isIncludeRedHatAssociates() {
    return includeRedHatAssociates;
  }

  public void setIncludeRedHatAssociates(Boolean includeRedHatAssociates) {
    this.includeRedHatAssociates = includeRedHatAssociates;
  }

  public SubscriptionNotify subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * The email subject 
   * @return subject
  **/
  @Schema(description = "The email subject ")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public SubscriptionNotify subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Indicates which Subscription the resource type belongs to 
   * @return subscriptionId
  **/
  @Schema(description = "Indicates which Subscription the resource type belongs to ")
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }

  public SubscriptionNotify templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

   /**
   * The name of the template used to construct the email contents 
   * @return templateName
  **/
  @Schema(description = "The name of the template used to construct the email contents ")
  public String getTemplateName() {
    return templateName;
  }

  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }

  public SubscriptionNotify templateParameters(List<TemplateParameter> templateParameters) {
    this.templateParameters = templateParameters;
    return this;
  }

  public SubscriptionNotify addTemplateParametersItem(TemplateParameter templateParametersItem) {
    if (this.templateParameters == null) {
      this.templateParameters = new ArrayList<>();
    }
    this.templateParameters.add(templateParametersItem);
    return this;
  }

   /**
   * The values which will be substituted into the templated email 
   * @return templateParameters
  **/
  @Schema(description = "The values which will be substituted into the templated email ")
  public List<TemplateParameter> getTemplateParameters() {
    return templateParameters;
  }

  public void setTemplateParameters(List<TemplateParameter> templateParameters) {
    this.templateParameters = templateParameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionNotify subscriptionNotify = (SubscriptionNotify) o;
    return Objects.equals(this.bccAddress, subscriptionNotify.bccAddress) &&
        Objects.equals(this.clusterId, subscriptionNotify.clusterId) &&
        Objects.equals(this.clusterUuid, subscriptionNotify.clusterUuid) &&
        Objects.equals(this.includeRedHatAssociates, subscriptionNotify.includeRedHatAssociates) &&
        Objects.equals(this.subject, subscriptionNotify.subject) &&
        Objects.equals(this.subscriptionId, subscriptionNotify.subscriptionId) &&
        Objects.equals(this.templateName, subscriptionNotify.templateName) &&
        Objects.equals(this.templateParameters, subscriptionNotify.templateParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bccAddress, clusterId, clusterUuid, includeRedHatAssociates, subject, subscriptionId, templateName, templateParameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionNotify {\n");
    
    sb.append("    bccAddress: ").append(toIndentedString(bccAddress)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    clusterUuid: ").append(toIndentedString(clusterUuid)).append("\n");
    sb.append("    includeRedHatAssociates: ").append(toIndentedString(includeRedHatAssociates)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateParameters: ").append(toIndentedString(templateParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
