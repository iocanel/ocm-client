/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.clustersmgmt.v1.AddOnInstallMode;
import io.fabric8.ocm.model.clustersmgmt.v1.AddOnParameter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Representation of an add-on that can be installed in a cluster. 
 */
@Schema(description = "Representation of an add-on that can be installed in a cluster. ")

public class AddOn {
  @JsonProperty("kind")
  private String kind = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("docs_link")
  private String docsLink = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("has_external_resources")
  private Boolean hasExternalResources = null;

  @JsonProperty("hidden")
  private Boolean hidden = null;

  @JsonProperty("icon")
  private String icon = null;

  @JsonProperty("install_mode")
  private AddOnInstallMode installMode = null;

  @JsonProperty("label")
  private String label = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("operator_name")
  private String operatorName = null;

  @JsonProperty("parameters")
  private List<AddOnParameter> parameters = null;

  @JsonProperty("resource_cost")
  private Float resourceCost = null;

  @JsonProperty("resource_name")
  private String resourceName = null;

  @JsonProperty("target_namespace")
  private String targetNamespace = null;

  public AddOn kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Indicates the type of this object. Will be &#x27;AddOn&#x27; if this is a complete object or &#x27;AddOnLink&#x27; if it is just a link. 
   * @return kind
  **/
  @Schema(description = "Indicates the type of this object. Will be 'AddOn' if this is a complete object or 'AddOnLink' if it is just a link. ")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public AddOn id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the object. 
   * @return id
  **/
  @Schema(description = "Unique identifier of the object. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AddOn href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Self link. 
   * @return href
  **/
  @Schema(description = "Self link. ")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public AddOn description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the add-on. 
   * @return description
  **/
  @Schema(description = "Description of the add-on. ")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AddOn docsLink(String docsLink) {
    this.docsLink = docsLink;
    return this;
  }

   /**
   * Link to documentation about the add-on. 
   * @return docsLink
  **/
  @Schema(description = "Link to documentation about the add-on. ")
  public String getDocsLink() {
    return docsLink;
  }

  public void setDocsLink(String docsLink) {
    this.docsLink = docsLink;
  }

  public AddOn enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates if this add-on can be added to clusters. 
   * @return enabled
  **/
  @Schema(description = "Indicates if this add-on can be added to clusters. ")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public AddOn hasExternalResources(Boolean hasExternalResources) {
    this.hasExternalResources = hasExternalResources;
    return this;
  }

   /**
   * Indicates if this add-on has external resources associated with it  
   * @return hasExternalResources
  **/
  @Schema(description = "Indicates if this add-on has external resources associated with it  ")
  public Boolean isHasExternalResources() {
    return hasExternalResources;
  }

  public void setHasExternalResources(Boolean hasExternalResources) {
    this.hasExternalResources = hasExternalResources;
  }

  public AddOn hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Indicates if this add-on is hidden. 
   * @return hidden
  **/
  @Schema(description = "Indicates if this add-on is hidden. ")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public AddOn icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Base64-encoded icon representing an add-on. The icon should be in PNG format. 
   * @return icon
  **/
  @Schema(description = "Base64-encoded icon representing an add-on. The icon should be in PNG format. ")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public AddOn installMode(AddOnInstallMode installMode) {
    this.installMode = installMode;
    return this;
  }

   /**
   * Get installMode
   * @return installMode
  **/
  @Schema(description = "")
  public AddOnInstallMode getInstallMode() {
    return installMode;
  }

  public void setInstallMode(AddOnInstallMode installMode) {
    this.installMode = installMode;
  }

  public AddOn label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label used to attach to a cluster deployment when add-on is installed. 
   * @return label
  **/
  @Schema(description = "Label used to attach to a cluster deployment when add-on is installed. ")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public AddOn name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the add-on. 
   * @return name
  **/
  @Schema(description = "Name of the add-on. ")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AddOn operatorName(String operatorName) {
    this.operatorName = operatorName;
    return this;
  }

   /**
   * The name of the operator installed by this add-on. 
   * @return operatorName
  **/
  @Schema(description = "The name of the operator installed by this add-on. ")
  public String getOperatorName() {
    return operatorName;
  }

  public void setOperatorName(String operatorName) {
    this.operatorName = operatorName;
  }

  public AddOn parameters(List<AddOnParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public AddOn addParametersItem(AddOnParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * List of parameters for this add-on. 
   * @return parameters
  **/
  @Schema(description = "List of parameters for this add-on. ")
  public List<AddOnParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<AddOnParameter> parameters) {
    this.parameters = parameters;
  }

  public AddOn resourceCost(Float resourceCost) {
    this.resourceCost = resourceCost;
    return this;
  }

   /**
   * Used to determine how many units of quota an add-on consumes per resource name. 
   * @return resourceCost
  **/
  @Schema(description = "Used to determine how many units of quota an add-on consumes per resource name. ")
  public Float getResourceCost() {
    return resourceCost;
  }

  public void setResourceCost(Float resourceCost) {
    this.resourceCost = resourceCost;
  }

  public AddOn resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

   /**
   * Used to determine from where to reserve quota for this add-on. 
   * @return resourceName
  **/
  @Schema(description = "Used to determine from where to reserve quota for this add-on. ")
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }

  public AddOn targetNamespace(String targetNamespace) {
    this.targetNamespace = targetNamespace;
    return this;
  }

   /**
   * The namespace in which the addon CRD exists. 
   * @return targetNamespace
  **/
  @Schema(description = "The namespace in which the addon CRD exists. ")
  public String getTargetNamespace() {
    return targetNamespace;
  }

  public void setTargetNamespace(String targetNamespace) {
    this.targetNamespace = targetNamespace;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddOn addOn = (AddOn) o;
    return Objects.equals(this.kind, addOn.kind) &&
        Objects.equals(this.id, addOn.id) &&
        Objects.equals(this.href, addOn.href) &&
        Objects.equals(this.description, addOn.description) &&
        Objects.equals(this.docsLink, addOn.docsLink) &&
        Objects.equals(this.enabled, addOn.enabled) &&
        Objects.equals(this.hasExternalResources, addOn.hasExternalResources) &&
        Objects.equals(this.hidden, addOn.hidden) &&
        Objects.equals(this.icon, addOn.icon) &&
        Objects.equals(this.installMode, addOn.installMode) &&
        Objects.equals(this.label, addOn.label) &&
        Objects.equals(this.name, addOn.name) &&
        Objects.equals(this.operatorName, addOn.operatorName) &&
        Objects.equals(this.parameters, addOn.parameters) &&
        Objects.equals(this.resourceCost, addOn.resourceCost) &&
        Objects.equals(this.resourceName, addOn.resourceName) &&
        Objects.equals(this.targetNamespace, addOn.targetNamespace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, id, href, description, docsLink, enabled, hasExternalResources, hidden, icon, installMode, label, name, operatorName, parameters, resourceCost, resourceName, targetNamespace);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddOn {\n");
    
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    docsLink: ").append(toIndentedString(docsLink)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hasExternalResources: ").append(toIndentedString(hasExternalResources)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    installMode: ").append(toIndentedString(installMode)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operatorName: ").append(toIndentedString(operatorName)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    resourceCost: ").append(toIndentedString(resourceCost)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    targetNamespace: ").append(toIndentedString(targetNamespace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
