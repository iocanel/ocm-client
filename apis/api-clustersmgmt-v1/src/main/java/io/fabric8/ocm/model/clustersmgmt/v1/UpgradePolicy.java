/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.clustersmgmt.v1.Value;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
/**
 * Representation of an upgrade policy that can be set for a cluster. 
 */
@Schema(description = "Representation of an upgrade policy that can be set for a cluster. ")

public class UpgradePolicy {
  @JsonProperty("kind")
  private String kind = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("cluster_id")
  private String clusterId = null;

  @JsonProperty("next_run")
  private LocalDateTime nextRun = null;

  @JsonProperty("node_drain_grace_period")
  private Value nodeDrainGracePeriod = null;

  @JsonProperty("schedule")
  private String schedule = null;

  @JsonProperty("schedule_type")
  private String scheduleType = null;

  @JsonProperty("upgrade_type")
  private String upgradeType = null;

  @JsonProperty("version")
  private String version = null;

  public UpgradePolicy kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Indicates the type of this object. Will be &#x27;UpgradePolicy&#x27; if this is a complete object or &#x27;UpgradePolicyLink&#x27; if it is just a link. 
   * @return kind
  **/
  @Schema(description = "Indicates the type of this object. Will be 'UpgradePolicy' if this is a complete object or 'UpgradePolicyLink' if it is just a link. ")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public UpgradePolicy id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the object. 
   * @return id
  **/
  @Schema(description = "Unique identifier of the object. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UpgradePolicy href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Self link. 
   * @return href
  **/
  @Schema(description = "Self link. ")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public UpgradePolicy clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Cluster ID this upgrade policy is defined for. 
   * @return clusterId
  **/
  @Schema(description = "Cluster ID this upgrade policy is defined for. ")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public UpgradePolicy nextRun(LocalDateTime nextRun) {
    this.nextRun = nextRun;
    return this;
  }

   /**
   * Next time the upgrade should run. 
   * @return nextRun
  **/
  @Schema(description = "Next time the upgrade should run. ")
  public LocalDateTime getNextRun() {
    return nextRun;
  }

  public void setNextRun(LocalDateTime nextRun) {
    this.nextRun = nextRun;
  }

  public UpgradePolicy nodeDrainGracePeriod(Value nodeDrainGracePeriod) {
    this.nodeDrainGracePeriod = nodeDrainGracePeriod;
    return this;
  }

   /**
   * Get nodeDrainGracePeriod
   * @return nodeDrainGracePeriod
  **/
  @Schema(description = "")
  public Value getNodeDrainGracePeriod() {
    return nodeDrainGracePeriod;
  }

  public void setNodeDrainGracePeriod(Value nodeDrainGracePeriod) {
    this.nodeDrainGracePeriod = nodeDrainGracePeriod;
  }

  public UpgradePolicy schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Schedule cron expression that defines automatic upgrade scheduling. 
   * @return schedule
  **/
  @Schema(description = "Schedule cron expression that defines automatic upgrade scheduling. ")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }

  public UpgradePolicy scheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
    return this;
  }

   /**
   * Schedule type can be either \&quot;manual\&quot; (single execution) or \&quot;automatic\&quot; (re-occurring). 
   * @return scheduleType
  **/
  @Schema(description = "Schedule type can be either \"manual\" (single execution) or \"automatic\" (re-occurring). ")
  public String getScheduleType() {
    return scheduleType;
  }

  public void setScheduleType(String scheduleType) {
    this.scheduleType = scheduleType;
  }

  public UpgradePolicy upgradeType(String upgradeType) {
    this.upgradeType = upgradeType;
    return this;
  }

   /**
   * Upgrade type specify the type of the upgrade. Can be \&quot;OSD\&quot; or \&quot;CVE\&quot;. 
   * @return upgradeType
  **/
  @Schema(description = "Upgrade type specify the type of the upgrade. Can be \"OSD\" or \"CVE\". ")
  public String getUpgradeType() {
    return upgradeType;
  }

  public void setUpgradeType(String upgradeType) {
    this.upgradeType = upgradeType;
  }

  public UpgradePolicy version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version is the desired upgrade version. 
   * @return version
  **/
  @Schema(description = "Version is the desired upgrade version. ")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpgradePolicy upgradePolicy = (UpgradePolicy) o;
    return Objects.equals(this.kind, upgradePolicy.kind) &&
        Objects.equals(this.id, upgradePolicy.id) &&
        Objects.equals(this.href, upgradePolicy.href) &&
        Objects.equals(this.clusterId, upgradePolicy.clusterId) &&
        Objects.equals(this.nextRun, upgradePolicy.nextRun) &&
        Objects.equals(this.nodeDrainGracePeriod, upgradePolicy.nodeDrainGracePeriod) &&
        Objects.equals(this.schedule, upgradePolicy.schedule) &&
        Objects.equals(this.scheduleType, upgradePolicy.scheduleType) &&
        Objects.equals(this.upgradeType, upgradePolicy.upgradeType) &&
        Objects.equals(this.version, upgradePolicy.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, id, href, clusterId, nextRun, nodeDrainGracePeriod, schedule, scheduleType, upgradeType, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpgradePolicy {\n");
    
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    nextRun: ").append(toIndentedString(nextRun)).append("\n");
    sb.append("    nodeDrainGracePeriod: ").append(toIndentedString(nodeDrainGracePeriod)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    upgradeType: ").append(toIndentedString(upgradeType)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
