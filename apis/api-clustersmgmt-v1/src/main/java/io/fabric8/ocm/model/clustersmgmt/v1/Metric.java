/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.clustersmgmt.v1.Sample;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Metric included in a dashboard. 
 */
@Schema(description = "Metric included in a dashboard. ")

public class Metric {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("vector")
  private List<Sample> vector = null;

  public Metric name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the metric. 
   * @return name
  **/
  @Schema(description = "Name of the metric. ")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Metric vector(List<Sample> vector) {
    this.vector = vector;
    return this;
  }

  public Metric addVectorItem(Sample vectorItem) {
    if (this.vector == null) {
      this.vector = new ArrayList<>();
    }
    this.vector.add(vectorItem);
    return this;
  }

   /**
   * Samples of the metric. 
   * @return vector
  **/
  @Schema(description = "Samples of the metric. ")
  public List<Sample> getVector() {
    return vector;
  }

  public void setVector(List<Sample> vector) {
    this.vector = vector;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metric metric = (Metric) o;
    return Objects.equals(this.name, metric.name) &&
        Objects.equals(this.vector, metric.vector);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, vector);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metric {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    vector: ").append(toIndentedString(vector)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
