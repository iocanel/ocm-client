/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.clustersmgmt.v1.ClusterMetric;
import io.fabric8.ocm.model.clustersmgmt.v1.ClusterNodes;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Cluster metrics received via telemetry. 
 */
@Schema(description = "Cluster metrics received via telemetry. ")

public class ClusterMetrics {
  @JsonProperty("cpu")
  private ClusterMetric cpu = null;

  @JsonProperty("compute_nodes_cpu")
  private ClusterMetric computeNodesCpu = null;

  @JsonProperty("compute_nodes_memory")
  private ClusterMetric computeNodesMemory = null;

  @JsonProperty("compute_nodes_sockets")
  private ClusterMetric computeNodesSockets = null;

  @JsonProperty("critical_alerts_firing")
  private Integer criticalAlertsFiring = null;

  @JsonProperty("memory")
  private ClusterMetric memory = null;

  @JsonProperty("nodes")
  private ClusterNodes nodes = null;

  @JsonProperty("operators_condition_failing")
  private Integer operatorsConditionFailing = null;

  @JsonProperty("sockets")
  private ClusterMetric sockets = null;

  @JsonProperty("storage")
  private ClusterMetric storage = null;

  public ClusterMetrics cpu(ClusterMetric cpu) {
    this.cpu = cpu;
    return this;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @Schema(description = "")
  public ClusterMetric getCpu() {
    return cpu;
  }

  public void setCpu(ClusterMetric cpu) {
    this.cpu = cpu;
  }

  public ClusterMetrics computeNodesCpu(ClusterMetric computeNodesCpu) {
    this.computeNodesCpu = computeNodesCpu;
    return this;
  }

   /**
   * Get computeNodesCpu
   * @return computeNodesCpu
  **/
  @Schema(description = "")
  public ClusterMetric getComputeNodesCpu() {
    return computeNodesCpu;
  }

  public void setComputeNodesCpu(ClusterMetric computeNodesCpu) {
    this.computeNodesCpu = computeNodesCpu;
  }

  public ClusterMetrics computeNodesMemory(ClusterMetric computeNodesMemory) {
    this.computeNodesMemory = computeNodesMemory;
    return this;
  }

   /**
   * Get computeNodesMemory
   * @return computeNodesMemory
  **/
  @Schema(description = "")
  public ClusterMetric getComputeNodesMemory() {
    return computeNodesMemory;
  }

  public void setComputeNodesMemory(ClusterMetric computeNodesMemory) {
    this.computeNodesMemory = computeNodesMemory;
  }

  public ClusterMetrics computeNodesSockets(ClusterMetric computeNodesSockets) {
    this.computeNodesSockets = computeNodesSockets;
    return this;
  }

   /**
   * Get computeNodesSockets
   * @return computeNodesSockets
  **/
  @Schema(description = "")
  public ClusterMetric getComputeNodesSockets() {
    return computeNodesSockets;
  }

  public void setComputeNodesSockets(ClusterMetric computeNodesSockets) {
    this.computeNodesSockets = computeNodesSockets;
  }

  public ClusterMetrics criticalAlertsFiring(Integer criticalAlertsFiring) {
    this.criticalAlertsFiring = criticalAlertsFiring;
    return this;
  }

   /**
   * CriticalAlertsFiring contains information about critical alerts firing. 
   * @return criticalAlertsFiring
  **/
  @Schema(description = "CriticalAlertsFiring contains information about critical alerts firing. ")
  public Integer getCriticalAlertsFiring() {
    return criticalAlertsFiring;
  }

  public void setCriticalAlertsFiring(Integer criticalAlertsFiring) {
    this.criticalAlertsFiring = criticalAlertsFiring;
  }

  public ClusterMetrics memory(ClusterMetric memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public ClusterMetric getMemory() {
    return memory;
  }

  public void setMemory(ClusterMetric memory) {
    this.memory = memory;
  }

  public ClusterMetrics nodes(ClusterNodes nodes) {
    this.nodes = nodes;
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @Schema(description = "")
  public ClusterNodes getNodes() {
    return nodes;
  }

  public void setNodes(ClusterNodes nodes) {
    this.nodes = nodes;
  }

  public ClusterMetrics operatorsConditionFailing(Integer operatorsConditionFailing) {
    this.operatorsConditionFailing = operatorsConditionFailing;
    return this;
  }

   /**
   * OperatorsConditionFailing contains information about operator in failing condition in the cluster. 
   * @return operatorsConditionFailing
  **/
  @Schema(description = "OperatorsConditionFailing contains information about operator in failing condition in the cluster. ")
  public Integer getOperatorsConditionFailing() {
    return operatorsConditionFailing;
  }

  public void setOperatorsConditionFailing(Integer operatorsConditionFailing) {
    this.operatorsConditionFailing = operatorsConditionFailing;
  }

  public ClusterMetrics sockets(ClusterMetric sockets) {
    this.sockets = sockets;
    return this;
  }

   /**
   * Get sockets
   * @return sockets
  **/
  @Schema(description = "")
  public ClusterMetric getSockets() {
    return sockets;
  }

  public void setSockets(ClusterMetric sockets) {
    this.sockets = sockets;
  }

  public ClusterMetrics storage(ClusterMetric storage) {
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @Schema(description = "")
  public ClusterMetric getStorage() {
    return storage;
  }

  public void setStorage(ClusterMetric storage) {
    this.storage = storage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterMetrics clusterMetrics = (ClusterMetrics) o;
    return Objects.equals(this.cpu, clusterMetrics.cpu) &&
        Objects.equals(this.computeNodesCpu, clusterMetrics.computeNodesCpu) &&
        Objects.equals(this.computeNodesMemory, clusterMetrics.computeNodesMemory) &&
        Objects.equals(this.computeNodesSockets, clusterMetrics.computeNodesSockets) &&
        Objects.equals(this.criticalAlertsFiring, clusterMetrics.criticalAlertsFiring) &&
        Objects.equals(this.memory, clusterMetrics.memory) &&
        Objects.equals(this.nodes, clusterMetrics.nodes) &&
        Objects.equals(this.operatorsConditionFailing, clusterMetrics.operatorsConditionFailing) &&
        Objects.equals(this.sockets, clusterMetrics.sockets) &&
        Objects.equals(this.storage, clusterMetrics.storage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpu, computeNodesCpu, computeNodesMemory, computeNodesSockets, criticalAlertsFiring, memory, nodes, operatorsConditionFailing, sockets, storage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterMetrics {\n");
    
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    computeNodesCpu: ").append(toIndentedString(computeNodesCpu)).append("\n");
    sb.append("    computeNodesMemory: ").append(toIndentedString(computeNodesMemory)).append("\n");
    sb.append("    computeNodesSockets: ").append(toIndentedString(computeNodesSockets)).append("\n");
    sb.append("    criticalAlertsFiring: ").append(toIndentedString(criticalAlertsFiring)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    operatorsConditionFailing: ").append(toIndentedString(operatorsConditionFailing)).append("\n");
    sb.append("    sockets: ").append(toIndentedString(sockets)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
