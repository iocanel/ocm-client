/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Details for &#x60;github&#x60; identity providers. 
 */
@Schema(description = "Details for `github` identity providers. ")

public class GithubIdentityProvider {
  @JsonProperty("ca")
  private String ca = null;

  @JsonProperty("client_id")
  private String clientId = null;

  @JsonProperty("client_secret")
  private String clientSecret = null;

  @JsonProperty("hostname")
  private String hostname = null;

  @JsonProperty("organizations")
  private List<String> organizations = null;

  @JsonProperty("teams")
  private List<String> teams = null;

  public GithubIdentityProvider ca(String ca) {
    this.ca = ca;
    return this;
  }

   /**
   * Optional trusted certificate authority bundle to use when making requests tot he server. 
   * @return ca
  **/
  @Schema(description = "Optional trusted certificate authority bundle to use when making requests tot he server. ")
  public String getCa() {
    return ca;
  }

  public void setCa(String ca) {
    this.ca = ca;
  }

  public GithubIdentityProvider clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Client identifier of a registered _GitHub_ OAuth application. 
   * @return clientId
  **/
  @Schema(description = "Client identifier of a registered _GitHub_ OAuth application. ")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public GithubIdentityProvider clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Client secret of a registered _GitHub_ OAuth application. 
   * @return clientSecret
  **/
  @Schema(description = "Client secret of a registered _GitHub_ OAuth application. ")
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  public GithubIdentityProvider hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * For _GitHub Enterprise_ you must provide the host name of your instance, such as &#x60;example.com&#x60;. This value must match the _GitHub Enterprise_ host name value in the &#x60;/setup/settings&#x60; file and cannot include a port number.  For plain _GitHub_ omit this parameter. 
   * @return hostname
  **/
  @Schema(description = "For _GitHub Enterprise_ you must provide the host name of your instance, such as `example.com`. This value must match the _GitHub Enterprise_ host name value in the `/setup/settings` file and cannot include a port number.  For plain _GitHub_ omit this parameter. ")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public GithubIdentityProvider organizations(List<String> organizations) {
    this.organizations = organizations;
    return this;
  }

  public GithubIdentityProvider addOrganizationsItem(String organizationsItem) {
    if (this.organizations == null) {
      this.organizations = new ArrayList<>();
    }
    this.organizations.add(organizationsItem);
    return this;
  }

   /**
   * Optional list of organizations. Cannot be used in combination with the Teams field. 
   * @return organizations
  **/
  @Schema(description = "Optional list of organizations. Cannot be used in combination with the Teams field. ")
  public List<String> getOrganizations() {
    return organizations;
  }

  public void setOrganizations(List<String> organizations) {
    this.organizations = organizations;
  }

  public GithubIdentityProvider teams(List<String> teams) {
    this.teams = teams;
    return this;
  }

  public GithubIdentityProvider addTeamsItem(String teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Optional list of teams. Cannot be used in combination with the Organizations field. 
   * @return teams
  **/
  @Schema(description = "Optional list of teams. Cannot be used in combination with the Organizations field. ")
  public List<String> getTeams() {
    return teams;
  }

  public void setTeams(List<String> teams) {
    this.teams = teams;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GithubIdentityProvider githubIdentityProvider = (GithubIdentityProvider) o;
    return Objects.equals(this.ca, githubIdentityProvider.ca) &&
        Objects.equals(this.clientId, githubIdentityProvider.clientId) &&
        Objects.equals(this.clientSecret, githubIdentityProvider.clientSecret) &&
        Objects.equals(this.hostname, githubIdentityProvider.hostname) &&
        Objects.equals(this.organizations, githubIdentityProvider.organizations) &&
        Objects.equals(this.teams, githubIdentityProvider.teams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ca, clientId, clientSecret, hostname, organizations, teams);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GithubIdentityProvider {\n");
    
    sb.append("    ca: ").append(toIndentedString(ca)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    organizations: ").append(toIndentedString(organizations)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
