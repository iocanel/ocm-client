/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Representation of an _OpenShift_ version. 
 */
@Schema(description = "Representation of an _OpenShift_ version. ")

public class Version {
  @JsonProperty("kind")
  private String kind = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("rosa_enabled")
  private Boolean rosaEnabled = null;

  @JsonProperty("available_upgrades")
  private List<String> availableUpgrades = null;

  @JsonProperty("channel_group")
  private String channelGroup = null;

  @JsonProperty("default")
  private Boolean _default = null;

  @JsonProperty("enabled")
  private Boolean enabled = null;

  @JsonProperty("raw_id")
  private String rawId = null;

  public Version kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Indicates the type of this object. Will be &#x27;Version&#x27; if this is a complete object or &#x27;VersionLink&#x27; if it is just a link. 
   * @return kind
  **/
  @Schema(description = "Indicates the type of this object. Will be 'Version' if this is a complete object or 'VersionLink' if it is just a link. ")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public Version id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the object. 
   * @return id
  **/
  @Schema(description = "Unique identifier of the object. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Version href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Self link. 
   * @return href
  **/
  @Schema(description = "Self link. ")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Version rosaEnabled(Boolean rosaEnabled) {
    this.rosaEnabled = rosaEnabled;
    return this;
  }

   /**
   * ROSAEnabled indicates whether this version can be used to create ROSA clusters. 
   * @return rosaEnabled
  **/
  @Schema(description = "ROSAEnabled indicates whether this version can be used to create ROSA clusters. ")
  public Boolean isRosaEnabled() {
    return rosaEnabled;
  }

  public void setRosaEnabled(Boolean rosaEnabled) {
    this.rosaEnabled = rosaEnabled;
  }

  public Version availableUpgrades(List<String> availableUpgrades) {
    this.availableUpgrades = availableUpgrades;
    return this;
  }

  public Version addAvailableUpgradesItem(String availableUpgradesItem) {
    if (this.availableUpgrades == null) {
      this.availableUpgrades = new ArrayList<>();
    }
    this.availableUpgrades.add(availableUpgradesItem);
    return this;
  }

   /**
   * AvailableUpgrades is the list of versions this version can be upgraded to. 
   * @return availableUpgrades
  **/
  @Schema(description = "AvailableUpgrades is the list of versions this version can be upgraded to. ")
  public List<String> getAvailableUpgrades() {
    return availableUpgrades;
  }

  public void setAvailableUpgrades(List<String> availableUpgrades) {
    this.availableUpgrades = availableUpgrades;
  }

  public Version channelGroup(String channelGroup) {
    this.channelGroup = channelGroup;
    return this;
  }

   /**
   * ChannelGroup is the name of the group where this image belongs. ChannelGroup is a mechanism to partition the images to different groups, each image belongs to only a single group. 
   * @return channelGroup
  **/
  @Schema(description = "ChannelGroup is the name of the group where this image belongs. ChannelGroup is a mechanism to partition the images to different groups, each image belongs to only a single group. ")
  public String getChannelGroup() {
    return channelGroup;
  }

  public void setChannelGroup(String channelGroup) {
    this.channelGroup = channelGroup;
  }

  public Version _default(Boolean _default) {
    this._default = _default;
    return this;
  }

   /**
   * Indicates if this should be selected as the default version when a cluster is created without specifying explicitly the version. 
   * @return _default
  **/
  @Schema(description = "Indicates if this should be selected as the default version when a cluster is created without specifying explicitly the version. ")
  public Boolean isDefault() {
    return _default;
  }

  public void setDefault(Boolean _default) {
    this._default = _default;
  }

  public Version enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates if this version can be used to create clusters. 
   * @return enabled
  **/
  @Schema(description = "Indicates if this version can be used to create clusters. ")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public Version rawId(String rawId) {
    this.rawId = rawId;
    return this;
  }

   /**
   * RawID is the id of the version - without channel group and prefix. 
   * @return rawId
  **/
  @Schema(description = "RawID is the id of the version - without channel group and prefix. ")
  public String getRawId() {
    return rawId;
  }

  public void setRawId(String rawId) {
    this.rawId = rawId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Version version = (Version) o;
    return Objects.equals(this.kind, version.kind) &&
        Objects.equals(this.id, version.id) &&
        Objects.equals(this.href, version.href) &&
        Objects.equals(this.rosaEnabled, version.rosaEnabled) &&
        Objects.equals(this.availableUpgrades, version.availableUpgrades) &&
        Objects.equals(this.channelGroup, version.channelGroup) &&
        Objects.equals(this._default, version._default) &&
        Objects.equals(this.enabled, version.enabled) &&
        Objects.equals(this.rawId, version.rawId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, id, href, rosaEnabled, availableUpgrades, channelGroup, _default, enabled, rawId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Version {\n");
    
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    rosaEnabled: ").append(toIndentedString(rosaEnabled)).append("\n");
    sb.append("    availableUpgrades: ").append(toIndentedString(availableUpgrades)).append("\n");
    sb.append("    channelGroup: ").append(toIndentedString(channelGroup)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    rawId: ").append(toIndentedString(rawId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
