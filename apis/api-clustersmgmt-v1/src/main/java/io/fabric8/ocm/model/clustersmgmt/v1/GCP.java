/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Google cloud platform settings of a cluster. 
 */
@Schema(description = "Google cloud platform settings of a cluster. ")

public class GCP {
  @JsonProperty("auth_uri")
  private String authUri = null;

  @JsonProperty("auth_provider_x509_cert_url")
  private String authProviderX509CertUrl = null;

  @JsonProperty("client_id")
  private String clientId = null;

  @JsonProperty("client_x509_cert_url")
  private String clientX509CertUrl = null;

  @JsonProperty("client_email")
  private String clientEmail = null;

  @JsonProperty("private_key")
  private String privateKey = null;

  @JsonProperty("private_key_id")
  private String privateKeyId = null;

  @JsonProperty("project_id")
  private String projectId = null;

  @JsonProperty("token_uri")
  private String tokenUri = null;

  @JsonProperty("type")
  private String type = null;

  public GCP authUri(String authUri) {
    this.authUri = authUri;
    return this;
  }

   /**
   * GCP authentication uri 
   * @return authUri
  **/
  @Schema(description = "GCP authentication uri ")
  public String getAuthUri() {
    return authUri;
  }

  public void setAuthUri(String authUri) {
    this.authUri = authUri;
  }

  public GCP authProviderX509CertUrl(String authProviderX509CertUrl) {
    this.authProviderX509CertUrl = authProviderX509CertUrl;
    return this;
  }

   /**
   * GCP Authentication provider x509 certificate url 
   * @return authProviderX509CertUrl
  **/
  @Schema(description = "GCP Authentication provider x509 certificate url ")
  public String getAuthProviderX509CertUrl() {
    return authProviderX509CertUrl;
  }

  public void setAuthProviderX509CertUrl(String authProviderX509CertUrl) {
    this.authProviderX509CertUrl = authProviderX509CertUrl;
  }

  public GCP clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * GCP client identifier 
   * @return clientId
  **/
  @Schema(description = "GCP client identifier ")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public GCP clientX509CertUrl(String clientX509CertUrl) {
    this.clientX509CertUrl = clientX509CertUrl;
    return this;
  }

   /**
   * GCP client x509 certificate url 
   * @return clientX509CertUrl
  **/
  @Schema(description = "GCP client x509 certificate url ")
  public String getClientX509CertUrl() {
    return clientX509CertUrl;
  }

  public void setClientX509CertUrl(String clientX509CertUrl) {
    this.clientX509CertUrl = clientX509CertUrl;
  }

  public GCP clientEmail(String clientEmail) {
    this.clientEmail = clientEmail;
    return this;
  }

   /**
   * GCP client email 
   * @return clientEmail
  **/
  @Schema(description = "GCP client email ")
  public String getClientEmail() {
    return clientEmail;
  }

  public void setClientEmail(String clientEmail) {
    this.clientEmail = clientEmail;
  }

  public GCP privateKey(String privateKey) {
    this.privateKey = privateKey;
    return this;
  }

   /**
   * GCP private key 
   * @return privateKey
  **/
  @Schema(description = "GCP private key ")
  public String getPrivateKey() {
    return privateKey;
  }

  public void setPrivateKey(String privateKey) {
    this.privateKey = privateKey;
  }

  public GCP privateKeyId(String privateKeyId) {
    this.privateKeyId = privateKeyId;
    return this;
  }

   /**
   * GCP private key identifier 
   * @return privateKeyId
  **/
  @Schema(description = "GCP private key identifier ")
  public String getPrivateKeyId() {
    return privateKeyId;
  }

  public void setPrivateKeyId(String privateKeyId) {
    this.privateKeyId = privateKeyId;
  }

  public GCP projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * GCP project identifier. 
   * @return projectId
  **/
  @Schema(description = "GCP project identifier. ")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public GCP tokenUri(String tokenUri) {
    this.tokenUri = tokenUri;
    return this;
  }

   /**
   * GCP token uri 
   * @return tokenUri
  **/
  @Schema(description = "GCP token uri ")
  public String getTokenUri() {
    return tokenUri;
  }

  public void setTokenUri(String tokenUri) {
    this.tokenUri = tokenUri;
  }

  public GCP type(String type) {
    this.type = type;
    return this;
  }

   /**
   * GCP the type of the service the key belongs to 
   * @return type
  **/
  @Schema(description = "GCP the type of the service the key belongs to ")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GCP GCP = (GCP) o;
    return Objects.equals(this.authUri, GCP.authUri) &&
        Objects.equals(this.authProviderX509CertUrl, GCP.authProviderX509CertUrl) &&
        Objects.equals(this.clientId, GCP.clientId) &&
        Objects.equals(this.clientX509CertUrl, GCP.clientX509CertUrl) &&
        Objects.equals(this.clientEmail, GCP.clientEmail) &&
        Objects.equals(this.privateKey, GCP.privateKey) &&
        Objects.equals(this.privateKeyId, GCP.privateKeyId) &&
        Objects.equals(this.projectId, GCP.projectId) &&
        Objects.equals(this.tokenUri, GCP.tokenUri) &&
        Objects.equals(this.type, GCP.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authUri, authProviderX509CertUrl, clientId, clientX509CertUrl, clientEmail, privateKey, privateKeyId, projectId, tokenUri, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GCP {\n");
    
    sb.append("    authUri: ").append(toIndentedString(authUri)).append("\n");
    sb.append("    authProviderX509CertUrl: ").append(toIndentedString(authProviderX509CertUrl)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientX509CertUrl: ").append(toIndentedString(clientX509CertUrl)).append("\n");
    sb.append("    clientEmail: ").append(toIndentedString(clientEmail)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("    privateKeyId: ").append(toIndentedString(privateKeyId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    tokenUri: ").append(toIndentedString(tokenUri)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
