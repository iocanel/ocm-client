/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
/**
 * Representation of information from telemetry about a the CPU capacity by node role and OS. 
 */
@Schema(description = "Representation of information from telemetry about a the CPU capacity by node role and OS. ")

public class CPUTotalNodeRoleOSMetricNode {
  @JsonProperty("cpu_total")
  private Float cpuTotal = null;

  @JsonProperty("node_roles")
  private List<String> nodeRoles = null;

  @JsonProperty("operating_system")
  private String operatingSystem = null;

  @JsonProperty("time")
  private LocalDateTime time = null;

  public CPUTotalNodeRoleOSMetricNode cpuTotal(Float cpuTotal) {
    this.cpuTotal = cpuTotal;
    return this;
  }

   /**
   * The total CPU capacity of nodes with this set of roles and operating system. 
   * @return cpuTotal
  **/
  @Schema(description = "The total CPU capacity of nodes with this set of roles and operating system. ")
  public Float getCpuTotal() {
    return cpuTotal;
  }

  public void setCpuTotal(Float cpuTotal) {
    this.cpuTotal = cpuTotal;
  }

  public CPUTotalNodeRoleOSMetricNode nodeRoles(List<String> nodeRoles) {
    this.nodeRoles = nodeRoles;
    return this;
  }

  public CPUTotalNodeRoleOSMetricNode addNodeRolesItem(String nodeRolesItem) {
    if (this.nodeRoles == null) {
      this.nodeRoles = new ArrayList<>();
    }
    this.nodeRoles.add(nodeRolesItem);
    return this;
  }

   /**
   * Representation of the node role for a cluster. 
   * @return nodeRoles
  **/
  @Schema(description = "Representation of the node role for a cluster. ")
  public List<String> getNodeRoles() {
    return nodeRoles;
  }

  public void setNodeRoles(List<String> nodeRoles) {
    this.nodeRoles = nodeRoles;
  }

  public CPUTotalNodeRoleOSMetricNode operatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

   /**
   * The operating system. 
   * @return operatingSystem
  **/
  @Schema(description = "The operating system. ")
  public String getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }

  public CPUTotalNodeRoleOSMetricNode time(LocalDateTime time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @Schema(description = "")
  public LocalDateTime getTime() {
    return time;
  }

  public void setTime(LocalDateTime time) {
    this.time = time;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CPUTotalNodeRoleOSMetricNode cpUTotalNodeRoleOSMetricNode = (CPUTotalNodeRoleOSMetricNode) o;
    return Objects.equals(this.cpuTotal, cpUTotalNodeRoleOSMetricNode.cpuTotal) &&
        Objects.equals(this.nodeRoles, cpUTotalNodeRoleOSMetricNode.nodeRoles) &&
        Objects.equals(this.operatingSystem, cpUTotalNodeRoleOSMetricNode.operatingSystem) &&
        Objects.equals(this.time, cpUTotalNodeRoleOSMetricNode.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuTotal, nodeRoles, operatingSystem, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CPUTotalNodeRoleOSMetricNode {\n");
    
    sb.append("    cpuTotal: ").append(toIndentedString(cpuTotal)).append("\n");
    sb.append("    nodeRoles: ").append(toIndentedString(nodeRoles)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
