/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Network configuration of a cluster. 
 */
@Schema(description = "Network configuration of a cluster. ")

public class Network {
  @JsonProperty("host_prefix")
  private Integer hostPrefix = null;

  @JsonProperty("machine_cidr")
  private String machineCidr = null;

  @JsonProperty("pod_cidr")
  private String podCidr = null;

  @JsonProperty("service_cidr")
  private String serviceCidr = null;

  public Network hostPrefix(Integer hostPrefix) {
    this.hostPrefix = hostPrefix;
    return this;
  }

   /**
   * Network host prefix which is defaulted to &#x60;23&#x60; if not specified. 
   * @return hostPrefix
  **/
  @Schema(description = "Network host prefix which is defaulted to `23` if not specified. ")
  public Integer getHostPrefix() {
    return hostPrefix;
  }

  public void setHostPrefix(Integer hostPrefix) {
    this.hostPrefix = hostPrefix;
  }

  public Network machineCidr(String machineCidr) {
    this.machineCidr = machineCidr;
    return this;
  }

   /**
   * IP address block from which to assign machine IP addresses, for example &#x60;10.0.0.0/16&#x60;. 
   * @return machineCidr
  **/
  @Schema(description = "IP address block from which to assign machine IP addresses, for example `10.0.0.0/16`. ")
  public String getMachineCidr() {
    return machineCidr;
  }

  public void setMachineCidr(String machineCidr) {
    this.machineCidr = machineCidr;
  }

  public Network podCidr(String podCidr) {
    this.podCidr = podCidr;
    return this;
  }

   /**
   * IP address block from which to assign pod IP addresses, for example &#x60;10.128.0.0/14&#x60;. 
   * @return podCidr
  **/
  @Schema(description = "IP address block from which to assign pod IP addresses, for example `10.128.0.0/14`. ")
  public String getPodCidr() {
    return podCidr;
  }

  public void setPodCidr(String podCidr) {
    this.podCidr = podCidr;
  }

  public Network serviceCidr(String serviceCidr) {
    this.serviceCidr = serviceCidr;
    return this;
  }

   /**
   * IP address block from which to assign service IP addresses, for example &#x60;172.30.0.0/16&#x60;. 
   * @return serviceCidr
  **/
  @Schema(description = "IP address block from which to assign service IP addresses, for example `172.30.0.0/16`. ")
  public String getServiceCidr() {
    return serviceCidr;
  }

  public void setServiceCidr(String serviceCidr) {
    this.serviceCidr = serviceCidr;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Network network = (Network) o;
    return Objects.equals(this.hostPrefix, network.hostPrefix) &&
        Objects.equals(this.machineCidr, network.machineCidr) &&
        Objects.equals(this.podCidr, network.podCidr) &&
        Objects.equals(this.serviceCidr, network.serviceCidr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostPrefix, machineCidr, podCidr, serviceCidr);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Network {\n");
    
    sb.append("    hostPrefix: ").append(toIndentedString(hostPrefix)).append("\n");
    sb.append("    machineCidr: ").append(toIndentedString(machineCidr)).append("\n");
    sb.append("    podCidr: ").append(toIndentedString(podCidr)).append("\n");
    sb.append("    serviceCidr: ").append(toIndentedString(serviceCidr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
