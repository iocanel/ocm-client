/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.clustersmgmt.v1.Cluster;
import io.fabric8.ocm.model.clustersmgmt.v1.MachinePoolAutoscaling;
import io.fabric8.ocm.model.clustersmgmt.v1.Taint;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Representation of a machine pool in a cluster. 
 */
@Schema(description = "Representation of a machine pool in a cluster. ")

public class MachinePool {
  @JsonProperty("kind")
  private String kind = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("autoscaling")
  private MachinePoolAutoscaling autoscaling = null;

  @JsonProperty("availability_zones")
  private List<String> availabilityZones = null;

  @JsonProperty("cluster")
  private Cluster cluster = null;

  @JsonProperty("instance_type")
  private String instanceType = null;

  @JsonProperty("labels")
  private Map<String, String> labels = null;

  @JsonProperty("replicas")
  private Integer replicas = null;

  @JsonProperty("taints")
  private List<Taint> taints = null;

  public MachinePool kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Indicates the type of this object. Will be &#x27;MachinePool&#x27; if this is a complete object or &#x27;MachinePoolLink&#x27; if it is just a link. 
   * @return kind
  **/
  @Schema(description = "Indicates the type of this object. Will be 'MachinePool' if this is a complete object or 'MachinePoolLink' if it is just a link. ")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public MachinePool id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the object. 
   * @return id
  **/
  @Schema(description = "Unique identifier of the object. ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MachinePool href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Self link. 
   * @return href
  **/
  @Schema(description = "Self link. ")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public MachinePool autoscaling(MachinePoolAutoscaling autoscaling) {
    this.autoscaling = autoscaling;
    return this;
  }

   /**
   * Get autoscaling
   * @return autoscaling
  **/
  @Schema(description = "")
  public MachinePoolAutoscaling getAutoscaling() {
    return autoscaling;
  }

  public void setAutoscaling(MachinePoolAutoscaling autoscaling) {
    this.autoscaling = autoscaling;
  }

  public MachinePool availabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  public MachinePool addAvailabilityZonesItem(String availabilityZonesItem) {
    if (this.availabilityZones == null) {
      this.availabilityZones = new ArrayList<>();
    }
    this.availabilityZones.add(availabilityZonesItem);
    return this;
  }

   /**
   * The availability zones upon which the nodes are created. 
   * @return availabilityZones
  **/
  @Schema(description = "The availability zones upon which the nodes are created. ")
  public List<String> getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
  }

  public MachinePool cluster(Cluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public Cluster getCluster() {
    return cluster;
  }

  public void setCluster(Cluster cluster) {
    this.cluster = cluster;
  }

  public MachinePool instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * The instance type of Nodes to create. 
   * @return instanceType
  **/
  @Schema(description = "The instance type of Nodes to create. ")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public MachinePool labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public MachinePool putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * The labels set on the Nodes created. 
   * @return labels
  **/
  @Schema(description = "The labels set on the Nodes created. ")
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }

  public MachinePool replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * The number of Machines (and Nodes) to create. Replicas and autoscaling cannot be used together.     
   * @return replicas
  **/
  @Schema(description = "The number of Machines (and Nodes) to create. Replicas and autoscaling cannot be used together.     ")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public MachinePool taints(List<Taint> taints) {
    this.taints = taints;
    return this;
  }

  public MachinePool addTaintsItem(Taint taintsItem) {
    if (this.taints == null) {
      this.taints = new ArrayList<>();
    }
    this.taints.add(taintsItem);
    return this;
  }

   /**
   * The taints set on the Nodes created. 
   * @return taints
  **/
  @Schema(description = "The taints set on the Nodes created. ")
  public List<Taint> getTaints() {
    return taints;
  }

  public void setTaints(List<Taint> taints) {
    this.taints = taints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MachinePool machinePool = (MachinePool) o;
    return Objects.equals(this.kind, machinePool.kind) &&
        Objects.equals(this.id, machinePool.id) &&
        Objects.equals(this.href, machinePool.href) &&
        Objects.equals(this.autoscaling, machinePool.autoscaling) &&
        Objects.equals(this.availabilityZones, machinePool.availabilityZones) &&
        Objects.equals(this.cluster, machinePool.cluster) &&
        Objects.equals(this.instanceType, machinePool.instanceType) &&
        Objects.equals(this.labels, machinePool.labels) &&
        Objects.equals(this.replicas, machinePool.replicas) &&
        Objects.equals(this.taints, machinePool.taints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kind, id, href, autoscaling, availabilityZones, cluster, instanceType, labels, replicas, taints);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MachinePool {\n");
    
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    autoscaling: ").append(toIndentedString(autoscaling)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    taints: ").append(toIndentedString(taints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
