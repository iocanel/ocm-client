/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.clustersmgmt.v1.Value;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
/**
 * Metric describing the total and used amount of some resource (like RAM, CPU and storage) in a cluster. 
 */
@Schema(description = "Metric describing the total and used amount of some resource (like RAM, CPU and storage) in a cluster. ")

public class ClusterMetric {
  @JsonProperty("total")
  private Value total = null;

  @JsonProperty("updated_timestamp")
  private LocalDateTime updatedTimestamp = null;

  @JsonProperty("used")
  private Value used = null;

  public ClusterMetric total(Value total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Value getTotal() {
    return total;
  }

  public void setTotal(Value total) {
    this.total = total;
  }

  public ClusterMetric updatedTimestamp(LocalDateTime updatedTimestamp) {
    this.updatedTimestamp = updatedTimestamp;
    return this;
  }

   /**
   * Collection timestamp of the metric. 
   * @return updatedTimestamp
  **/
  @Schema(description = "Collection timestamp of the metric. ")
  public LocalDateTime getUpdatedTimestamp() {
    return updatedTimestamp;
  }

  public void setUpdatedTimestamp(LocalDateTime updatedTimestamp) {
    this.updatedTimestamp = updatedTimestamp;
  }

  public ClusterMetric used(Value used) {
    this.used = used;
    return this;
  }

   /**
   * Get used
   * @return used
  **/
  @Schema(description = "")
  public Value getUsed() {
    return used;
  }

  public void setUsed(Value used) {
    this.used = used;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterMetric clusterMetric = (ClusterMetric) o;
    return Objects.equals(this.total, clusterMetric.total) &&
        Objects.equals(this.updatedTimestamp, clusterMetric.updatedTimestamp) &&
        Objects.equals(this.used, clusterMetric.used);
  }

  @Override
  public int hashCode() {
    return Objects.hash(total, updatedTimestamp, used);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterMetric {\n");
    
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    updatedTimestamp: ").append(toIndentedString(updatedTimestamp)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
