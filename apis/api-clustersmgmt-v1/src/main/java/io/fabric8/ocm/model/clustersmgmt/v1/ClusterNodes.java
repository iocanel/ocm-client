/*
 * clusters_mgmt
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: ocm-feedback@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.fabric8.ocm.model.clustersmgmt.v1;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fabric8.ocm.model.clustersmgmt.v1.MachinePoolAutoscaling;
import io.fabric8.ocm.model.clustersmgmt.v1.MachineType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * Counts of different classes of nodes inside a cluster. 
 */
@Schema(description = "Counts of different classes of nodes inside a cluster. ")

public class ClusterNodes {
  @JsonProperty("autoscale_compute")
  private MachinePoolAutoscaling autoscaleCompute = null;

  @JsonProperty("availability_zones")
  private List<String> availabilityZones = null;

  @JsonProperty("compute")
  private Integer compute = null;

  @JsonProperty("compute_labels")
  private Map<String, String> computeLabels = null;

  @JsonProperty("compute_machine_type")
  private MachineType computeMachineType = null;

  @JsonProperty("infra")
  private Integer infra = null;

  @JsonProperty("master")
  private Integer master = null;

  @JsonProperty("total")
  private Integer total = null;

  public ClusterNodes autoscaleCompute(MachinePoolAutoscaling autoscaleCompute) {
    this.autoscaleCompute = autoscaleCompute;
    return this;
  }

   /**
   * Get autoscaleCompute
   * @return autoscaleCompute
  **/
  @Schema(description = "")
  public MachinePoolAutoscaling getAutoscaleCompute() {
    return autoscaleCompute;
  }

  public void setAutoscaleCompute(MachinePoolAutoscaling autoscaleCompute) {
    this.autoscaleCompute = autoscaleCompute;
  }

  public ClusterNodes availabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
    return this;
  }

  public ClusterNodes addAvailabilityZonesItem(String availabilityZonesItem) {
    if (this.availabilityZones == null) {
      this.availabilityZones = new ArrayList<>();
    }
    this.availabilityZones.add(availabilityZonesItem);
    return this;
  }

   /**
   * The availability zones upon which the nodes are created. 
   * @return availabilityZones
  **/
  @Schema(description = "The availability zones upon which the nodes are created. ")
  public List<String> getAvailabilityZones() {
    return availabilityZones;
  }

  public void setAvailabilityZones(List<String> availabilityZones) {
    this.availabilityZones = availabilityZones;
  }

  public ClusterNodes compute(Integer compute) {
    this.compute = compute;
    return this;
  }

   /**
   * Number of compute nodes of the cluster. Compute and AutoscaleCompute cannot be used together.     
   * @return compute
  **/
  @Schema(description = "Number of compute nodes of the cluster. Compute and AutoscaleCompute cannot be used together.     ")
  public Integer getCompute() {
    return compute;
  }

  public void setCompute(Integer compute) {
    this.compute = compute;
  }

  public ClusterNodes computeLabels(Map<String, String> computeLabels) {
    this.computeLabels = computeLabels;
    return this;
  }

  public ClusterNodes putComputeLabelsItem(String key, String computeLabelsItem) {
    if (this.computeLabels == null) {
      this.computeLabels = new HashMap<>();
    }
    this.computeLabels.put(key, computeLabelsItem);
    return this;
  }

   /**
   * The labels set on the \&quot;default\&quot; compute machine pool. 
   * @return computeLabels
  **/
  @Schema(description = "The labels set on the \"default\" compute machine pool. ")
  public Map<String, String> getComputeLabels() {
    return computeLabels;
  }

  public void setComputeLabels(Map<String, String> computeLabels) {
    this.computeLabels = computeLabels;
  }

  public ClusterNodes computeMachineType(MachineType computeMachineType) {
    this.computeMachineType = computeMachineType;
    return this;
  }

   /**
   * Get computeMachineType
   * @return computeMachineType
  **/
  @Schema(description = "")
  public MachineType getComputeMachineType() {
    return computeMachineType;
  }

  public void setComputeMachineType(MachineType computeMachineType) {
    this.computeMachineType = computeMachineType;
  }

  public ClusterNodes infra(Integer infra) {
    this.infra = infra;
    return this;
  }

   /**
   * Number of infrastructure nodes of the cluster. 
   * @return infra
  **/
  @Schema(description = "Number of infrastructure nodes of the cluster. ")
  public Integer getInfra() {
    return infra;
  }

  public void setInfra(Integer infra) {
    this.infra = infra;
  }

  public ClusterNodes master(Integer master) {
    this.master = master;
    return this;
  }

   /**
   * Number of master nodes of the cluster. 
   * @return master
  **/
  @Schema(description = "Number of master nodes of the cluster. ")
  public Integer getMaster() {
    return master;
  }

  public void setMaster(Integer master) {
    this.master = master;
  }

  public ClusterNodes total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Total number of nodes of the cluster. 
   * @return total
  **/
  @Schema(description = "Total number of nodes of the cluster. ")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterNodes clusterNodes = (ClusterNodes) o;
    return Objects.equals(this.autoscaleCompute, clusterNodes.autoscaleCompute) &&
        Objects.equals(this.availabilityZones, clusterNodes.availabilityZones) &&
        Objects.equals(this.compute, clusterNodes.compute) &&
        Objects.equals(this.computeLabels, clusterNodes.computeLabels) &&
        Objects.equals(this.computeMachineType, clusterNodes.computeMachineType) &&
        Objects.equals(this.infra, clusterNodes.infra) &&
        Objects.equals(this.master, clusterNodes.master) &&
        Objects.equals(this.total, clusterNodes.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoscaleCompute, availabilityZones, compute, computeLabels, computeMachineType, infra, master, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterNodes {\n");
    
    sb.append("    autoscaleCompute: ").append(toIndentedString(autoscaleCompute)).append("\n");
    sb.append("    availabilityZones: ").append(toIndentedString(availabilityZones)).append("\n");
    sb.append("    compute: ").append(toIndentedString(compute)).append("\n");
    sb.append("    computeLabels: ").append(toIndentedString(computeLabels)).append("\n");
    sb.append("    computeMachineType: ").append(toIndentedString(computeMachineType)).append("\n");
    sb.append("    infra: ").append(toIndentedString(infra)).append("\n");
    sb.append("    master: ").append(toIndentedString(master)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
